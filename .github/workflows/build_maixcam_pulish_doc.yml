# This is a basic workflow to help you get started with Actions

name: Build and publish docs for MaixCAM

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Only run job for specific repository
    if: github.repository == 'sipeed/MaixCDK'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"] # MaixCAM use 3.11
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build MaixCDK API doc
        run: |
          echo "-- Check python version must python 3.11 --"
          python3 -c 'import sys;print(sys.version);assert sys.version_info >= (3, 11);assert sys.version_info < (3, 12)'
          python -c 'import sys;print(sys.version);assert sys.version_info >= (3, 11);assert sys.version_info < (3, 12)'
          whereis python
          whereis python3
          # export PATH=~/.local/bin/:$PATH
          echo "--------------------------------"
          echo "-- Install requirements first --"
          echo "--------------------------------"
          python -m pip install -r requirements.txt
          sudo apt update -y
          sudo apt install -y cmake autoconf automake libtool git build-essential
          echo "--------------------------------"
          echo "-- Build API DOC for MaixCAM now --"
          echo "--------------------------------"
          cd examples/nn_yolov5
          maixcdk distclean
          maixcdk build -p maixcam

      - name: Push doc to github pages
        run: |
          pip3 install teedoc
          cd docs
          echo "== install plugins =="
          teedoc install
          echo "== start build =="
          teedoc build
          echo "== build complete =="
          remote_addr=`git remote get-url --push origin`
          remote_addr=`echo $remote_addr|  awk -F'://' '{print $2}'`
          user_name=`git log -1 --pretty=format:'%an'`
          user_email=`git log -1 --pretty=format:'%ae'`
          echo "== checkout gh-pages branch =="
          cd out
          cp -r ../../.github .
          git config --global init.defaultBranch gh-pages
          git init
          git config user.name "${user_name}"
          git config user.email ${user_email}
          remote_addr="https://Neutree:${{ secrets.DISPATCH_PAT }}@${remote_addr}"
          echo "-- user ${user_name}"
          echo "-- remote addr: ${remote_addr}"
          git remote add origin "${remote_addr}"
          echo "== add web files =="
          git add -A
          git commit -m "Rebuild MaixCDK doc by commit $GITHUB_REF"
          git push origin HEAD:gh-pages --force
          echo "== push complete =="
